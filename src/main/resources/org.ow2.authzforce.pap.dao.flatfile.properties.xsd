<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://authzforce.github.io/pap-dao-flat-file/xmlns/properties/3.6" xmlns="http://authzforce.github.io/pap-dao-flat-file/xmlns/properties/3.6"
	elementFormDefault="qualified" attributeFormDefault="unqualified" version="3.6.0">
	<xs:annotation>
		<xs:documentation xml:lang="en">
			Data Model for policy domain properties used by the AuthZForce PAP DAO based on flat file database.
			<p>
				XML schema versioning: the 'version' attribute of the root 'schema' element identifies the Major.Minor.Patch version of this schema. The Major.Minor part must match the Major.Minor part of the
				first compatible version of authzforce-ce-pap-dao-file library. The Patch version is used for any backwards-compatible change. The Minor version is incremented after any change that is NOT
				backwards-compatible. (As a result, the authzforce-ce-pap-dao-file library's minor version is incremented as well.)
				The Major.Minor version part must be part of the target namespace - but not the
				Patch
				version - to separate namespaces that are not backwards-compatible.
			</p>
		</xs:documentation>
	</xs:annotation>
	<xs:complexType name="DomainProperties">
		<xs:sequence>
			<xs:element name="description" type="xs:string" minOccurs="0" />
		</xs:sequence>
		<xs:attribute name="externalId" type="xs:NMTOKEN" use="optional">
			<xs:annotation>
				<xs:documentation xml:lang="en">
					Same function as in SCIM schema:
					An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the
					Resource between Service Consumer and Service
					provider by allowing the Consumer
					to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local
					identifier of the Resource and the identifier
					used by the Service Provider. Each
					Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued be the
					Service Consumer and can never be specified by
					the Service Provider. The Service
					Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="maxPolicyCount" type="xs:positiveInteger" use="optional">
				<xs:annotation>
					<xs:documentation>Maximum number of policies. No limit if this
						attribute is missing.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="maxVersionCountPerPolicy" type="xs:positiveInteger" use="optional">
				<xs:annotation>
					<xs:documentation>Maximum number of versions per policy. No limit
						if this attribute is missing.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="versionRollingEnabled" type="xs:boolean" use="optional"
				default="false">
				<xs:annotation>
					<xs:documentation>True iff versions are automatically removed to
						keep the number of versions under 'maxVersionCountPerPolicy',
						especially when this max is already reached. The strategy for
						removing versions is implementation-specific; e.g. implementations
						may remove the oldest versions first.
						Implementations must make
						sure it does not
						break the 'rootPolicyRef' defined previously or
						any Policy
						reference from it (direct or indirect).
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
	</xs:complexType>
	<xs:element name="domainProperties" type="DomainProperties" />
</xs:schema>